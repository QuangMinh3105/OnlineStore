@model CanonStore.Models.Product
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div class="main">
        <h2>Add Product</h2>
    <div class="form_content">
        <div class="form_product">

            @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">

                    @Html.HiddenFor(m => m.Id_product, new { @class = "form-control" })
                    @*<br>
                @Html.ValidationMessageFor(m => m.Id, "", new { @class = "text-danger" })<br>*@<br>
                </div>

                <div class="row">

                    @Html.LabelFor(m => m.Name, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Name)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Brand, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Brand, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Brand)
                    <br>
                    <br>

                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Price, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Price)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Type, new { @class = "form_label" })
                    <br>
                    @Html.DropDownListFor(m => m.Type,
                        new SelectList(ViewBag.product_Types, "IdType", "Name"),
                        new { @class = "form-control" })<br><br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Acc_Id, new { @class = "form_label" })
                    <br>
                    @Html.DropDownListFor(m => m.Acc_Id,
                        new SelectList(ViewBag.accessories, "Id_Acc", "Name_Acc"),
                        new { @class = "form-control" })<br><br>
                </div>


                <div class="row">
                    @Html.LabelFor(m => m.Warranty, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Warranty, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Warranty)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Aperture, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Aperture, new { @class = "form-control",@Value="None" })<br>
                    @Html.ValidationMessageFor(m => m.Aperture)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Focal_Distance, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Focal_Distance, new { @class = "form-control", @Value = "None" })<br>
                    @Html.ValidationMessageFor(m => m.Focal_Distance)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Shutter_Speed, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Shutter_Speed, new { @class = "form-control", @Value = "None" })<br>
                    @Html.ValidationMessageFor(m => m.Shutter_Speed)
                    <br>
                    <br>
                </div>

                <div class="row">
                    @Html.LabelFor(m => m.Quantity_in_Stock, new { @class = "form_label" })
                    <br>
                    @Html.TextBoxFor(m => m.Quantity_in_Stock, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Quantity_in_Stock)
                    <br>
                    <br>
                </div>

                <div class="row">
                    @Html.LabelFor(m => m.Description, new { @class = "form_label" })
                    <br>
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })<br>
                    @Html.ValidationMessageFor(m => m.Description)
                    <br>
                    <br>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.ImageUpload, new { @class = "form_label" })
                    <br>
                    <input type="file" name="ImageUpload" id="ImageUpload" />
                    @*@Html.TextBoxFor(m => m.Image, new { @class = "form-control", type="file" } )<br>*@
                    @*@Html.ValidationMessageFor(m=>m.Image)*@
                    <br>
                    <br>
                </div>
                <div class="btn_row">
                    <input type="submit" value="Add Product" class="btn_addproduct">
                </div>
            }

        </div>
    </div>

</div>

